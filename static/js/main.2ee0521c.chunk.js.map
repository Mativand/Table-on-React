{"version":3,"sources":["components/UI/ButtonTitle/ButtonTitle.module.css","components/UI/Loader/Loader.module.css","components/UI/Input/Input.module.css","components/UI/ButtonPage/ButtonPage.module.css","components/Table/Table.module.css","components/UI/ButtonTitle/ButtonTitle.jsx","components/UI/Loader/Loader.jsx","components/Table/Table.jsx","API/Service.js","components/UI/Input/Input.jsx","components/UI/ButtonPage/ButtonPage.jsx","components/Settings/Settings.jsx","utils/pages.js","App.js","index.js","components/Settings/Settings.module.css"],"names":["module","exports","ButtonTitle","children","sortData","value","className","s","button","onClick","e","target","dataset","data-value","Loader","loader","Table","comments","whatSort","loaderContainer","caption","map","el","scope","comment","td","id","name","email","body","PostService","limit","page","axios","get","params","_limit","_page","response","Input","setValue","placeholder","type","onChange","input","ButtonPage","Settings","pagesArray","changePage","settings","inputContainer","buttonContainer","p","getPageCount","totalCount","Math","ceil","App","useState","data","setData","defaultData","setDefaultData","search","setSearch","optionSort","setOptionSort","sortedData","setSortedData","totalPages","setTotalPages","setPage","setLoader","a","getAll","headers","result","i","push","getPagesArray","useEffect","fetchData","isContains","obj","values","Object","length","String","toLowerCase","includes","useMemo","filter","sort","b","localeCompare","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ee0521c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonTitle_button__1Y8YF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2E3C9\",\"rotate\":\"Loader_rotate__2eZSn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__1xx1o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonPage_button__3Rf1J\",\"button__current\":\"ButtonPage_button__current__1lGjy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"Table_loaderContainer__2qXyc\",\"caption\":\"Table_caption__2wV9w\",\"td\":\"Table_td__1CDyH\"};","import React from 'react';\r\nimport s from './ButtonTitle.module.css'\r\n\r\nconst ButtonTitle = ({children, sortData, value}) => {\r\n    return (\r\n        <div className={s.button} onClick={(e) => sortData(e.target.dataset.value)} data-value={value}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ButtonTitle;","import React from 'react';\r\nimport s from './Loader.module.css'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={s.loader}>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport ButtonTitle from \"../UI/ButtonTitle/ButtonTitle\";\r\nimport s from './Table.module.css'\r\nimport Loader from \"../UI/Loader/Loader\";\r\n\r\nconst Table = ({comments, sortData, whatSort, loader}) => {\r\n\r\n    return (\r\n        <div>\r\n            {loader\r\n                ? <span className={s.loaderContainer}><Loader/></span>\r\n                : <table>\r\n                    <caption className={s.caption}>List a comments</caption>\r\n                    <thead >\r\n                    <tr>\r\n                        {whatSort.map(el =>\r\n                            <th scope=\"col\" key={el.value}>\r\n                                <ButtonTitle value={el.value} sortData={sortData}>\r\n                                    {el.value}\r\n                                </ButtonTitle>\r\n                            </th>\r\n                        )}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {comments.map(comment =>\r\n                        <tr key={comment.id}>\r\n                            <td className={s.td}>{comment.id}</td>\r\n                            <td className={s.td}>{comment.name}</td>\r\n                            <td className={s.td}>{comment.email}</td>\r\n                            <td className={s.td}>{comment.body}</td>\r\n                        </tr>\r\n                    )}\r\n                    </tbody>\r\n                </table> }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Table;","import axios from \"axios\";\r\n\r\nexport default class PostService {\r\n    static async getAll(limit = 50, page = 1){\r\n        const response = await axios.get('https://jsonplaceholder.typicode.com/comments', {\r\n            params: {\r\n                _limit: limit,\r\n                _page: page,\r\n            }\r\n        })\r\n        return response\r\n    }\r\n}","import React from 'react';\r\nimport s from './Input.module.css'\r\n\r\nconst Input = ({value, setValue}) => {\r\n    return (\r\n        <input placeholder=\" Search...\" type=\"text\" value={value} onChange={(e => setValue(e.target.value)\r\n        )} className={s.input}/>\r\n    );\r\n};\r\n\r\nexport default Input;","import React from 'react';\r\nimport s from './ButtonPage.module.css'\r\n\r\nconst ButtonPage = ({children}) => {\r\n    return (\r\n        <span className={s.button}>{children}</span>\r\n    );\r\n};\r\n\r\nexport default ButtonPage;","import React from 'react';\r\nimport Input from \"../UI/Input/Input\";\r\nimport ButtonPage from \"../UI/ButtonPage/ButtonPage\";\r\nimport s from './Settings.module.css'\r\n\r\nconst Settings = ({value, setValue, pagesArray, changePage}) => {\r\n    return (\r\n        <div className={s.settings}>\r\n           <span className={s.inputContainer}>\r\n               <Input\r\n                   placeholder=\"Search...\"\r\n                   value={value}\r\n                   setValue={setValue}/>\r\n           </span>\r\n            <span className={s.buttonContainer}>\r\n                     {pagesArray.map(p =>\r\n                             <span\r\n                                 onClick={() => changePage(p)}\r\n                                 key={p}>\r\n                     <ButtonPage>{p}</ButtonPage>\r\n                </span>\r\n                     )}\r\n                </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","export const getPageCount = (totalCount, limit) => {\r\n    return Math.ceil(totalCount / limit)\r\n}\r\n\r\nexport const getPagesArray = (totalPages) => {\r\n    let result = [];\r\n    for (let i = 0; i < totalPages; i++) {\r\n        result.push(i + 1)\r\n    }\r\n    return result\r\n}","import './App.css';\nimport Table from \"./components/Table/Table\";\nimport React, {useEffect, useMemo, useState} from \"react\";\nimport PostService from \"./API/Service\";\nimport Settings from \"./components/Settings/Settings\";\nimport {getPageCount, getPagesArray} from \"./utils/pages\";\n\nfunction App() {\n    const [data, setData] = useState([])\n    const [defaultData, setDefaultData] = useState([])\n    const [search, setSearch] = useState('')\n    const [optionSort, setOptionSort] = useState('asc')\n    const [sortedData, setSortedData] = useState([])\n    const [totalPages, setTotalPages] = useState(0)\n    const [limit, setLimit] = useState(50)\n    const [page, setPage] = useState(1)\n    const [loader, setLoader] = useState(false)\n\n    async function fetchData() {\n        setLoader(true)\n        const response = await PostService.getAll(limit, page)\n        setData(response.data)\n        setDefaultData(response.data)\n        const totalCount = response.headers['x-total-count']\n        setTotalPages(getPageCount(totalCount, limit))\n        setLoader(false)\n    }\n\n    let pagesArray = getPagesArray(totalPages)\n\n    useEffect(() => {\n        fetchData()\n    }, [page])\n\n    const sortData = (sort) => {\n        setSortedData([...data].sort((a, b) => {\n            if (optionSort === 'asc') {\n                setOptionSort('desc')\n                if (sort === 'id') {\n                    return a[sort] - b[sort]\n                } else {\n                    return a[sort].localeCompare(b[sort])\n                }\n            } else if (optionSort === 'desc') {\n                setOptionSort('asc')\n                if (sort === 'id') {\n                    return b[sort] - a[sort]\n                } else {\n                    return b[sort].localeCompare(a[sort])\n                }\n            }\n        }))\n        setData(sortedData)\n    }\n\n    const isContains = (obj) => {\n        let values = Object.values(obj);\n        for (let i = 0; i < values.length; i++) {\n            if (String(values[i]).toLowerCase().includes(search)) {\n                return true\n            }\n        }\n        return false\n    }\n\n    useMemo(() => {\n        if (sortedData.length === 0) {\n            setData(defaultData.filter(el => isContains(el)))\n        } else {\n            setData(sortedData.filter(el => isContains(el)))\n        }\n    }, [search, sortedData])\n\n    const changePage = (page) => {\n        setPage(page)\n    }\n\n    return (\n        <div className=\"App\">\n            <Settings value={search} setValue={setSearch} changePage={changePage} pagesArray={pagesArray}/>\n            <Table\n                comments={data}\n                sortData={sortData}\n                loader={loader}\n                whatSort={[\n                    {value: 'id'}, {value: 'name'}, {value: 'email'}, {value: 'body'}\n                ]}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__2q2OA\",\"buttonContainer\":\"Settings_buttonContainer__2d8a5\",\"inputContainer\":\"Settings_inputContainer__1odUU\"};"],"sourceRoot":""}